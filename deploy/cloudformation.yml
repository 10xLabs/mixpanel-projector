Parameters:
  Environment:
    Type: String
  AccessPointID:
    Type: String
  MixpanelToken:
    Type: String

Resources:
  Projection:
    Type: AWS::Lambda::Function
    Properties:
      Handler: "main"
      Role:  !GetAtt LambdaExecutionRole.Arn
      Code: lambda.zip
      FunctionName: !Sub ${AWS::StackName}
      Runtime: "go1.x"
      Timeout: 25
      FileSystemConfigs:
      - 
        Arn: !Sub "arn:aws:elasticfilesystem:us-east-1:113056000248:access-point/${AccessPointID}"
        LocalMountPath: "/mnt/mixpanel"
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub ${Environment}:LambdasSecurityGroup
        SubnetIds:
          - Fn::ImportValue:
              !Sub ${Environment}:PublicVPC:PrivateSubnetOne
          - Fn::ImportValue:
              !Sub ${Environment}:PublicVPC:PrivateSubnetTwo
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          AWS_SECRETS_ID: !Sub "${Environment}-Secrets"
          FILE_STORE_DIR: "/mnt/mixpanel"
          MIXPANEL_TOKEN: !Ref MixpanelToken
      Tags:
        - Key: Environment
          Value: !Ref Environment   

  Mapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt SQS.Arn
      FunctionName: !Ref Alias
      BatchSize: 10
      MaximumRecordAgeInSeconds: 120

  SQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}.fifo
      VisibilityTimeout: 300
      FifoQueue: true
      
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
            Resource: !GetAtt SQS.Arn
          - Effect: Allow
            Action:
            - secretsmanager:GetSecretValue
            Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${Environment}-Secrets*"
          - Effect: Allow
            Action:
              - "xray:PutTraceSegments"
              - "xray:PutTelemetryRecords"
            Resource: "*"
          - Effect: Allow
            Action:
              - elasticfilesystem:ClientMount
              - elasticfilesystem:ClientRootAccess
              - elasticfilesystem:ClientWrite
              - elasticfilesystem:DescribeMountTargets
            Resource: "*"

  Alias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref Projection
      FunctionVersion: $LATEST
      Name: LATEST

  ReplayAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref Projection
      FunctionVersion: $LATEST
      Name: REPLAY
  
  Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Ref Projection
      Namespace: AWS/SQS
      MetricName: ApproximateAgeOfOldestMessage
      Dimensions:
      - Name: QueueName
        Value: !GetAtt SQS.QueueName
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 60
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      AlarmActions:
      - Fn::ImportValue:
          !Sub "${Environment}:TriggerStatusSNSArn"
      OKActions:
      - Fn::ImportValue:
          !Sub "${Environment}:TriggerStatusSNSArn"
