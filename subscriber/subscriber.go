// Code generated by 10xLabs/chandler/subgen, DO NOT EDIT.
package subscriber

import (
	"github.com/10xLabs/comandler/message"
	"github.com/10xLabs/comandler/message/dto"
	boevent "github.com/10xLabs/evendipiti/booking/event"
)

func Subscribe() {
	subscribe(boevent.TypeBookingCreated, boevent.BookingCreatedFactory)
	subscribe(boevent.TypeBookingCreatedOnSite, boevent.BookingCreatedOnSiteFactory)
	subscribe(boevent.TypeBookingDepartureTripAdded, boevent.BookingDepartureTripAddedFactory)
	subscribe(boevent.TypeBookingReturnTripAdded, boevent.BookingReturnTripAddedFactory)
	subscribe(boevent.TypeBookingBuyerEmailChanged, boevent.BookingBuyerEmailChangedFactory)
	subscribe(boevent.TypeBookingBuyerFirstNameChanged, boevent.BookingBuyerFirstNameChangedFactory)
	subscribe(boevent.TypeBookingBuyerLastNameChanged, boevent.BookingBuyerLastNameChangedFactory)
	subscribe(boevent.TypeBookingBuyerPhoneChanged, boevent.BookingBuyerPhoneChangedFactory)
	subscribe(boevent.TypeBookingBuyerMarkedAsPassenger, boevent.BookingBuyerMarkedAsPassengerFactory)
	subscribe(boevent.TypeBookingBuyerUnmarkedAsPassenger, boevent.BookingBuyerUnmarkedAsPassengerFactory)
	subscribe(boevent.TypeBookingPassengersAdded, boevent.BookingPassengersAddedFactory)
	subscribe(boevent.TypeBookingTicketsPriceChanged, boevent.BookingTicketsPriceChangedFactory)
	subscribe(boevent.TypeBookingTicketsAdded, boevent.BookingTicketsAddedFactory)
	subscribe(boevent.TypeBookingTicketRemoved, boevent.BookingTicketRemovedFactory)
	subscribe(boevent.TypeBookingCheckedOutWithPayment, boevent.BookingCheckedOutWithPaymentFactory)
	subscribe(boevent.TypeBookingCheckedOut, boevent.BookingCheckedOutFactory)
	subscribe(boevent.TypeBookingCheckedOutOnSite, boevent.BookingCheckedOutOnSiteFactory)
	subscribe(boevent.TypeBookingPaid, boevent.BookingPaidFactory)
	subscribe(boevent.TypeBookingPaymentDeclined, boevent.BookingPaymentDeclinedFactory)
	subscribe(boevent.TypeBookingTicketsConfirmed, boevent.BookingTicketsConfirmedFactory)
	subscribe(boevent.TypeBookingConfirmed, boevent.BookingConfirmedFactory)
	subscribe(boevent.TypeBookingReset, boevent.BookingResetFactory)
	subscribe(boevent.TypeBookingPaymentFailed, boevent.BookingPaymentFailedFactory)
	subscribe(boevent.TypeBookingTicketsCancelled, boevent.BookingTicketsCancelledFactory)
	subscribe(boevent.TypeBookingPaidOnSite, boevent.BookingPaidOnSiteFactory)
	subscribe(boevent.TypeBookingTicketsReservationFailed, boevent.BookingTicketsReservationFailedFactory)
	subscribe(boevent.TypeBookingTicketsConfirmationFailed, boevent.BookingTicketsConfirmationFailedFactory)
	subscribe(boevent.TypeBookingTicketsPassengerChanged, boevent.BookingTicketsPassengerChangedFactory)
	subscribe(boevent.TypeBookingTicketSeatChanged, boevent.BookingTicketSeatChangedFactory)
	subscribe(boevent.TypeBookingTicketCheckedIn, boevent.BookingTicketCheckedInFactory)
	subscribe(boevent.TypeBookingTicketCheckedOut, boevent.BookingTicketCheckedOutFactory)
}

func subscribe(eventType string, f func(dto.Event) (message.Event, error)) {
	message.RegisterEventFactory(eventType, f)
}
